var through2 = require('through2');
var duplexer = require('duplexer');
var parser = require('tap-parser');
var sprintf = require('sprintf');

module.exports = function (opts) {
    if (!opts) opts = {};
    var tap = parser();
    var out = through2();
    var test, lastAssert;
    
    tap.on('comment', function (comment) {
        if (comment === 'fail 0') return; // a mocha thing
        
        if (test && test.ok && test.assertions.length === 0
        && /^(tests|pass)\s+\d+$/.test(test.name)) {
            out.push('\r' + trim(test.name));
        }
        else if (test && test.ok) {
            var s = updateName(test.offset + 1, 'âœ“ ' + test.name, 32);
            out.push('\r' + s);
        }
        
        test = {
            name: comment,
            assertions: [],
            offset: 0,
            ok: true
        };
        out.push('\r' + trim('# ' + comment) + '\x1b[K\n');
    });
    
    tap.on('assert', function (res) {
        var ok = res.ok ? 'ok' : 'not ok';
        var c = re